// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VillaMon_API.Data;

#nullable disable

namespace VillaMon_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240831150859_updateDB")]
    partial class updateDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VillaMon_API.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("VillaId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            CheckInDate = new DateTime(2024, 9, 10, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4161),
                            CheckOutDate = new DateTime(2024, 9, 15, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4165),
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4167),
                            GuestCount = 4,
                            GuestEmail = "john.doe@example.com",
                            GuestName = "John Doe",
                            PaymentStatus = "Paid",
                            UpdatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4167),
                            VillaId = 1
                        },
                        new
                        {
                            BookingId = 2,
                            CheckInDate = new DateTime(2024, 9, 20, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4169),
                            CheckOutDate = new DateTime(2024, 9, 25, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4170),
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4172),
                            GuestCount = 2,
                            GuestEmail = "jane.smith@example.com",
                            GuestName = "Jane Smith",
                            PaymentStatus = "Pending",
                            UpdatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4173),
                            VillaId = 2
                        },
                        new
                        {
                            BookingId = 3,
                            CheckInDate = new DateTime(2024, 9, 5, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4174),
                            CheckOutDate = new DateTime(2024, 9, 8, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4175),
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4176),
                            GuestCount = 3,
                            GuestEmail = "alice.johnson@example.com",
                            GuestName = "Alice Johnson",
                            PaymentStatus = "Cancelled",
                            UpdatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4177),
                            VillaId = 3
                        },
                        new
                        {
                            BookingId = 4,
                            CheckInDate = new DateTime(2024, 9, 12, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4178),
                            CheckOutDate = new DateTime(2024, 9, 17, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4179),
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4180),
                            GuestCount = 6,
                            GuestEmail = "michael.brown@example.com",
                            GuestName = "Michael Brown",
                            PaymentStatus = "Paid",
                            UpdatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4181),
                            VillaId = 4
                        },
                        new
                        {
                            BookingId = 5,
                            CheckInDate = new DateTime(2024, 9, 2, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4182),
                            CheckOutDate = new DateTime(2024, 9, 6, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4183),
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4185),
                            GuestCount = 8,
                            GuestEmail = "emily.davis@example.com",
                            GuestName = "Emily Davis",
                            PaymentStatus = "Paid",
                            UpdatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4186),
                            VillaId = 5
                        });
                });

            modelBuilder.Entity("VillaMon_API.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Private Pool, Garden, Spa, Gym",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4028),
                            Details = "A luxurious villa with royal amenities, including a private pool, garden, and a spacious living area.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa3.jpg",
                            IsAvailable = true,
                            Location = "Downtown City Center",
                            Name = "Royal Villa",
                            Occupancy = 6,
                            Rate = 350.0,
                            Sqft = 850,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Infinity Pool, Ocean View, BBQ Area",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4071),
                            Details = "An exclusive villa near the beach, featuring an infinity pool and breathtaking sea views.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa1.jpg",
                            IsAvailable = false,
                            Location = "Seaside",
                            Name = "Premium Pool Villa",
                            Occupancy = 4,
                            Rate = 450.0,
                            Sqft = 700,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "Private Pool, Rooftop Terrace, Modern Kitchen",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4073),
                            Details = "A stunning villa with a private pool, state-of-the-art kitchen, and a rooftop terrace.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa4.jpg",
                            IsAvailable = true,
                            Location = "Hilltop",
                            Name = "Luxury Pool Villa",
                            Occupancy = 5,
                            Rate = 500.0,
                            Sqft = 950,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "Mountain View, Fireplace, Wine Cellar",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4075),
                            Details = "An exquisite villa with crystal-clear views of the mountains, perfect for those seeking tranquility.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa5.jpg",
                            IsAvailable = true,
                            Location = "Mountain View",
                            Name = "Diamond Villa",
                            Occupancy = 8,
                            Rate = 600.0,
                            Sqft = 1200,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Amenity = "Grand Pool, Large Courtyard, Outdoor Kitchen",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4077),
                            Details = "A villa with a grand pool and a large courtyard, ideal for large families or groups.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa2.jpg",
                            IsAvailable = false,
                            Location = "Countryside",
                            Name = "Diamond Pool Villa",
                            Occupancy = 10,
                            Rate = 700.0,
                            Sqft = 1500,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Amenity = "Private Beach, Beachfront View, Outdoor Shower",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4079),
                            Details = "A beachfront villa with a private beach, perfect for a romantic getaway or a family vacation.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa6.jpg",
                            IsAvailable = true,
                            Location = "Beachfront",
                            Name = "Beachfront Villa",
                            Occupancy = 4,
                            Rate = 400.0,
                            Sqft = 800,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Amenity = "Kids' Play Area, Game Room, Large Pool",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4081),
                            Details = "A family-friendly villa with a kids' play area, game room, and a large swimming pool.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa7.jpg",
                            IsAvailable = true,
                            Location = "Suburbs",
                            Name = "Family Villa",
                            Occupancy = 6,
                            Rate = 350.0,
                            Sqft = 900,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Amenity = "Mountain View, Nature Trail, Meditation Area",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4083),
                            Details = "A villa nestled in the mountains, offering a serene environment and stunning views of nature.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa8.jpg",
                            IsAvailable = false,
                            Location = "Mountain Range",
                            Name = "Mountain Villa",
                            Occupancy = 4,
                            Rate = 300.0,
                            Sqft = 750,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Amenity = "Lake View, Private Dock, Water Activities",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4085),
                            Details = "A villa overlooking a tranquil lake, with a private dock and water activities for guests.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa9.jpg",
                            IsAvailable = true,
                            Location = "Lakeside",
                            Name = "Lakeview Villa",
                            Occupancy = 6,
                            Rate = 400.0,
                            Sqft = 850,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Amenity = "Botanical Garden, Greenhouse, Outdoor Dining",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4087),
                            Details = "A villa surrounded by lush gardens, with a botanical garden, greenhouse, and outdoor dining area.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa10.jpg",
                            IsAvailable = true,
                            Location = "Garden City",
                            Name = "Garden Villa",
                            Occupancy = 8,
                            Rate = 450.0,
                            Sqft = 1000,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Amenity = "Fishing, Boating, Riverside Dining",
                            CreatedDate = new DateTime(2024, 8, 31, 16, 8, 59, 485, DateTimeKind.Local).AddTicks(4089),
                            Details = "A villa by the riverside, offering fishing, boating, and riverside dining experiences.",
                            ImageUrl = "https://dotnetmastery.com/bluevillaimages/villa11.jpg",
                            IsAvailable = false,
                            Location = "Riverside",
                            Name = "Riverside Villa",
                            Occupancy = 4,
                            Rate = 350.0,
                            Sqft = 800,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("VillaMon_API.Models.Booking", b =>
                {
                    b.HasOne("VillaMon_API.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
